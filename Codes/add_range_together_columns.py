# -*- coding: utf-8 -*-
"""Step 2) add_together_columns.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IyWgHg-83g1lkvcTcEUW-y3q3_0RkgD5
"""

import pandas as pd
import matplotlib.dates as mdates
from google.colab import data_table, files
from openpyxl import load_workbook
import os

folder_path = 'Data'

def get_file_names_in_folder(folder_path):

  file_names = []
  if os.path.exists(folder_path):
    for filename in os.listdir(folder_path):
      file_path = os.path.join(folder_path, filename)
      if os.path.isfile(file_path):
        file_names.append(filename)
  return file_names

file_list = get_file_names_in_folder(folder_path)
length = len(file_list)

workbooks = []
all_sheet_names = []
for file in file_list:
  file_path = os.path.join(folder_path, file)
  try:
    workbook = load_workbook(file_path, read_only=True)
    workbooks.append(workbook)
    all_sheet_names.extend(workbook.sheetnames)
  except Exception as e:
    print(f"Error loading {file}: {e}")

dfs_dict = {}

for n in range(0, length):

    id_name = file_list[n]
    try:
        excel_file = load_workbook(f'{folder_path}/{id_name}')
        for sheet_name in excel_file.sheetnames:
            df = pd.read_excel(f'{folder_path}/{id_name}', sheet_name=sheet_name)
            print(df.head())
            df = df.rename(columns={'Actual_Min_Distance': f'Actual_Min_Distance_{n}_{sheet_name}'})

            if sheet_name not in dfs_dict:
                dfs_dict[sheet_name] = []
            dfs_dict[sheet_name].append(df)
    except FileNotFoundError:
        print(f"File not found: {id_name}")

merged_dfs_dict = {}
for sheet_name, dfs in dfs_dict.items():
    if dfs:
        merged_df = dfs[0]
        for i in range(1, len(dfs)):
            merged_df = pd.merge(merged_df, dfs[i], on='range', how='outer', suffixes=('', f'_{i+1}'))

        total_actual_min_distance_cols = [col for col in merged_df.columns if 'Actual_Min_Distance' in col]
        merged_df[f'Total_Actual_Min_Distance_{sheet_name}'] = merged_df[total_actual_min_distance_cols].sum(axis=1)

        merged_dfs_dict[sheet_name] = merged_df

for sheet_name, merged_df in merged_dfs_dict.items():
  filename = f"{sheet_name}_merged_data.xlsx"

  merged_df.to_excel(filename, index=False)
  files.download(filename)